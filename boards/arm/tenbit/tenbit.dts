/*
 * Copyright (c) 2024 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <st/f4/stm32f411Xe.dtsi>
#include <st/f4/stm32f411c(c-e)ux-pinctrl.dtsi>

#include <zephyr/dt-bindings/dt-util.h>

#include <dt-bindings/zmk/matrix_transform.h>

#include <layouts/common/ortho_4x12/all1u.dtsi>
#include <layouts/common/ortho_5x12/all1u.dtsi>

&layouts_common_ortho_4x12_position_map { status = "disabled"; };

&layout_ortho_5x12_all1u {
	transform = <&transform_5x12>;
};

&layout_ortho_4x12_all1u {
	transform = <&transform_4x12>;
};

&layouts_common_ortho_5x12_position_map {
    layout_ortho_4x12_all1u {
        physical-layout = <&layout_ortho_4x12_all1u>;
        positions
            = <48 49 50 51 52 53 54 55 56 57 58 59>
            , < 0  1  2  3  4  5  6  7  8  9 10 11>
            , <12 13 14 15 16 17 18 19 20 21 22 23>
            , <24 25 26 27 28 29 30 31 32 33 34 35>
            , <36 37 38 39 40 41 42 43 44 45 46 47>
            ;
    };
};

/ {
	model = "tenbit";
	compatible = "fingerpunch,tenbit";

	chosen {
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,code-partition = &code_partition;
		zmk,kscan = &matrix;
		zmk,physical-layout = &layout_ortho_5x12_all1u;
	};
	
	transform_4x12: transform_4x12 {
		compatible = "zmk,matrix-transform";
		rows = <4>;
		columns = <12>;
		
		map = <
		RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
		RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
		RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
		RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)
		>;
	};

	transform_5x12: transform_5x12 {
		compatible = "zmk,matrix-transform";
		rows = <5>;
		columns = <12>;
		
		map = <
		RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
		RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
		RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
		RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)
		RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11)
		>;
	};
	
	matrix: matrix {
	    compatible = "zmk,kscan-gpio-matrix";
	    diode-direction = "col2row";
	    col-gpios
	        = <&gpiob 10 GPIO_ACTIVE_HIGH>
	        , <&gpiob 2 GPIO_ACTIVE_HIGH>
	        , <&gpioa 15 GPIO_ACTIVE_HIGH>
	        , <&gpiob 3 GPIO_ACTIVE_HIGH>
	        , <&gpiob 4 GPIO_ACTIVE_HIGH>
	        , <&gpiob 5 GPIO_ACTIVE_HIGH>
	        , <&gpiob 8 GPIO_ACTIVE_HIGH>
	        , <&gpiob 9 GPIO_ACTIVE_HIGH>
	        , <&gpioc 13 GPIO_ACTIVE_HIGH>
	        , <&gpioc 14 GPIO_ACTIVE_HIGH>
	        , <&gpioa 4 GPIO_ACTIVE_HIGH>
	        , <&gpioa 3 GPIO_ACTIVE_HIGH>
	    ;
	    row-gpios
	        = <&gpiob 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	        , <&gpiob 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	        , <&gpioa 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	        , <&gpioa 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	        , <&gpioa 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	        ;
	};
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "tinyuf2";
			reg = <0x00000000 DT_SIZE_K(32)>;
		};

		/*
		 * Use third and fourth 16K sectors for storage
		 */

		storage_partition: partition@8000 {
			label = "storage";
			reg = <0x00008000 DT_SIZE_K(32)>;
		};

		code_partition: partition@10000 {
			label = "code";
			reg = <0x00010000 (DT_SIZE_K(512 - 32 - 32))>;
			read-only;
		};

	};
};

zephyr_udc0: &usbotg_fs {
	pinctrl-0 = <&usb_otg_fs_dm_pa11 &usb_otg_fs_dp_pa12>;
	pinctrl-names = "default";
	status = "okay";
};

&clk_lsi {
	status = "okay";
};

&clk_hse {
	clock-frequency = <DT_FREQ_M(8)>;
	status = "okay";
};

&pll {
	div-m = <8>;
	mul-n = <336>;
	div-p = <4>;
	div-q = <7>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(84)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <2>;
	apb2-prescaler = <1>;
};
